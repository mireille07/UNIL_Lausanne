# -*- coding: utf-8 -*-
"""ourFunctions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m4imoh0QGJD4UOXK8aTl8dQre1J6TY3x
"""

import sklearn.metrics
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
import re
#Evaluate fonction

def evaluate(true, pred):
      precision = precision_score(true, pred, pos_label='positive', average='macro')
      recall = recall_score(true, pred, pos_label='positive', average='macro')
      f1 = f1_score(true, pred, pos_label='positive', average='macro')
      print(f"CONFUSION MATRIX:\n{confusion_matrix(true, pred)}")
      print(f"ACCURACY SCORE:\n{accuracy_score(true, pred):.4f}")
      print(f"CLASSIFICATION REPORT:\n\tPrecision: {precision:.4f}\n\tRecall: {recall:.4f}\n\tF1_Score: {f1:.4f}")
      


#Fucntion to get the scores and add them to a liste of scores for final comparaison
def get_score(true, pred, classifier_name):
    
      precision = precision_score(true, pred, average= 'macro')
      recall = recall_score(true, pred, average = 'macro')
      f1 = f1_score(true, pred, average = 'macro')
      accuracy = accuracy_score(true, pred)
      cf = confusion_matrix(true, pred)
      a, b = [classifier_name, precision, recall, f1, accuracy], cf
      
      return a, b 


# Cleaning Function

def cleaning(sentence) :

  # Lower sentence (no removing stopWords without)  
  sentence=[item.lower() for item in sentence] 

  # Remove Punctuation 
  sentence = re.sub(r"[^\w\s\d]","", str(sentence))

  # Remove stopwords   We decided not to remove stop_word anymore because we notice that there are some short sentences  
    #stop_words = stopwords.words('french')
    #sentence = sentence.split()
    #sentence = " ".join([word for word in sentence if not word in stop_words])